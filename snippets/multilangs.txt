# . scala java rust clang c++ golang php perl python ruby if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2

# . scala java rust clang cpp golang php perl python ruby javascript increment decrement
# インクリメント・デクリメントの書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby、JavaScript)
# https://qiita.com/suzuki-navi/items/6611b9f16a391bac5ac5

# . clang cpp scala java rust golang php javascript perl python ruby elixir division remainder div rem integer
# 整数同士の除算演算子の挙動 (C言語、C++、Scala、Java、Rust、Go言語、PHP、JavaScript、Perl、Python、Ruby、Elixir)
# https://qiita.com/suzuki-navi/items/72fcb1fbf05008cbe8b4

# . cpp scala ruby python clang java javascript elixir next_permutation permutations permutation
# 順列の全探索をするプログラム（競技プログラミング向け）
# https://qiita.com/suzuki-navi/items/a80677a0747232843957


####################################################################################################
## データ型
####################################################################################################

################################
## 論理値
################################

# python bool boolean true false
True
False


####################################################################################################
## 演算子
####################################################################################################

################################
## インクリメント、デクリメント
################################

# scala increment decrement
i += 1;
i -= 1;

# java increment decrement
i++;
i--;

# clang increment decrement
i++;
i--;

# c++ increment decrement
i++;
i--;

# javascript increment decrement
i++;
i--;

# php increment decrement
$i++;
$i--;

# perl increment decrement
$i++;
$i--;

# rust increment decrement
i += 1;
i -= 1;

# golang increment decrement
i++
i--

# ruby increment decrement
i += 1
i -= 1

# python increment decrement
i += 1
i -= 1


####################################################################################################
## 制御構文
####################################################################################################

################################
## if文
################################

# scala if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2
if (...) {
  ...;
} else if (...) {
  ...;
} else {
  ...;
}

# java if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2
if (...) {
  ...;
} else if (...) {
  ...;
} else {
  ...;
}

# clang if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2
if (...) {
  ...;
} else if (...) {
  ...;
} else {
  ...;
}

# c++ if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2
if (...) {
  ...;
} else if (...) {
  ...;
} else {
  ...;
}

# php if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2
if (...) {
  ...;
} else if (...) {
  ...;
} else {
  ...;
}

# perl if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2
if (...) {
  ...;
} elsif (...) {
  ...;
} else {
  ...;
}
unless (...) {
  ...;
}
... if ...;
... unless ...;

# rust if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2
if ... {
  ...
} else if ... {
  ...
} else {
  ...
}

# golang if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2
if ... {
  ...
} else if ... {
  ...
} else {
  ...
}

# ruby if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2
if ...
  ...
elsif ...
  ...
else
  ...
end
unless ...
  ...
end
... if ...
... unless ...

# python if elif elsif else
# if文の書き方のまとめ(Scala、Java、Rust、C言語、C++、Go言語、PHP、Perl、Python、Ruby)
# https://qiita.com/suzuki-navi/items/16793a5f5e67fb8d3fc2
if ...:
  ...
elif ...:
  ...
else:
  ...


################################

# ruby loop times
10.times do |i|
  ...
end

# ruby loop for range
for i in 2..5
  # 2
  # 3
  # 4
  # 5
end

# ruby loop for range
for i in 0..n-1
  ...
end

# ruby loop while
while ...
  ...
end

# ruby loop while do
# do whileの構文
begin
  ...
end while ...

# ruby loop while
# 修飾子の記法
... while ...

# python while for loop break
while ...:
    ...
    if ...:
        break
    ...

# python while for loop continue
while ...:
    ...
    if ...:
        continue
    ...

## shell while for loop continue
for f in ...; do
    if ...; then
        continue
    fi
    ...
done

## shell while for loop break
for f in ...; do
    if ...; then
        break
    fi
    ...
done


####################################################################################################
## Map

# python map dict get getorelse
v = dct.get("key", "defaultValue")
# NoneやFalseの場合もデフォルト値にしたい場合
v = dict.get("key") or "defaultValue"


####################################################################################################
## DateTime

// javascript datetime strftime tostring
now = new Date();
//
console.log(now);
// 2020-12-14T13:48:41.493Z
//
console.log(now.toString());
// Mon Dec 14 2020 13:48:41 GMT+0000 (Coordinated Universal Time)
//
console.log(now.toISOString());
// 2020-12-14T13:48:41.493Z
//
console.log(now.toLocaleString());
// 12/14/2020, 1:48:41 PM
//
console.log(now.toUTCString());
// Mon, 14 Dec 2020 13:48:41 GMT
//
console.log(now.toGMTString());
// Mon, 14 Dec 2020 13:48:41 GMT

# python datetime strftime tostring
now = datetime.datetime.utcnow().astimezone(datetime.timezone(datetime.timedelta(hours = +9)))
print(now.strftime("%a, %d %b %Y %H:%M:%S %Z"))
# Mon, 14 Dec 2020 14:00:42 UTC+09:00
#
print(now.strftime("%Y-%m-%d %H:%M:%S %Z"))
# 2020-12-14 14:00:42 UTC+09:00


####################################################################################################

// scala seq slice substring
seq.slice(start, end);

// javascript string slice substr substring
s.substring(start)
s.substring(start, end)

// python string slice substr substring
s[start:]
s[start:end]

# cpp swap
swap(a, b);

# ruby swap
a, b = b, a

# python swap
a, b = b, a

# php swap
[$a, $b] = [$b, $a];

# perl swap
($a, $b) = ($b, $a);

# python loop for range
for i in range(4):
    # 0
    # 1
    # 2
    # 3

# python loop for range
for i in range(2, 6):
    # 2
    # 3
    # 4
    # 5

# elixir loop for range
(2 .. 6) |> Enum.each(fn l -> IO.puts(l) end)
  # 2
  # 3
  # 4
  # 5
  # 6

// javascript array list map
const result = arr.map(el => ...);

// javascript array list push append
arr.push(el);

# elixir string strcat
s1 <> s2

// javascript indexof find
const s = "abcbd"
s.indexOf("b")
// => 1
// return -1 on failure

# python lastindexof find rfind
s = "abcbd"
s.rfind("b")
# => 3
# return -1 on failure

// javascript lastindexof rfind
const s = "abcbd"
s.lastIndexOf("b")
// => 3
// return -1 on failure

// javascript string startswith
if (s.startsWith(prefix)) {
    ...;
}

// javascript string endswith
if (s.endsWith(prefix)) {
    ...;
}

# python string startswith
if s.startswith(prefix):
    ...

# python string endswith
if s.endswith(suffix):
    ...

// javascript array list string join mkstring
arr.join(" ")

# ruby array list string join mkstring
arr.join(" ")

# python array list string join mkstring
" ".join(map(str, lst))

# elixir array list string join mkstring
Enum.join(list, " ")

// javascript argv
// 1つ目のパラメータ
a = process.argv[2];
// argv[0]: "node"
// argv[1]: javascriptのスクリプトファイル名

# ruby argv
# 1つ目のパラメータ
a = ARGV[0]

# python argv
# 1つ目のパラメータ
a = sys.argv[1]

# python itoa sprintf format
# 数値に3桁ごとのカンマを付与して文字列化
size = 5000000
print("{:,} KiB".format(size / 1024))
# 4,882.8125 KiB
print("{:,} KiB".format(size // 1024))
# 4,882 KiB

# python env
import os
path = os.environ["PATH"]

// javascript env
const path = process.env.PATH;

// javascript process exit
// 非同期処理を待たずにプロセスを終了
process.exit(0);

# ruby file_get_contents
File.open("foo.txt") do |file|
  content = file.read
end

