# html vuejs click button
<button @click="myfunc">ボタン</button>

# css font font-family meiryo helvetica hiragino arial sans-serif
# 2020年に最適なfont-familyの書き方 - ICS MEDIA
# https://ics.media/entry/200317/
* {
  font-family: Meiryo,
    "Helvetica Neue",
    Arial,
    "Hiragino Kaku Gothic ProN",
    "Hiragino Sans",
    sans-serif;
}

# html font adobe source sans pro
<link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">

# css font adobe source sans pro
* {
  font-family: "Source Sans Pro";
}

# shell vuejs install
sudo npm install -g npm
sudo npm install -g @vue/cli
sudo npm install vue-router
vue create sample-project

# shell python http server
# 簡易HTTPサーバ
python -m http.server 8080

# shell docker centos amazon linux
# Amazon Linux 2 (CentOS) へのDockerインストール
sudo yum install docker
sudo systemctl start docker
sudo usermod -a -G docker ec2-user

# shell docker proxy systemd systemctl amazon linux
# Proxyが必要な環境でのDockerの設定
# Amazon Linuxでの実行例
cd /etc/systemd/system
sudo mkdir docker.service.d
cd docker.service.d
sudo bash -c "cat > http-proxy.conf" << EOF
[Service]
Environment="HTTP_PROXY=http://proxy:80/"
Environment="HTTPS_PROXY=http://proxy:443/"
EOF
sudo systemctl daemon-reload
sudo systemctl restart docker

# shell apt update upgrade
# パッケージ一覧を更新
sudo apt update

# shell apt update upgrade
# パッケージを更新
sudo apt upgrade

# shell python install pyenv pip
# install pyenv
git clone https://github.com/pyenv/pyenv.git $HOME/.pyenv
export PYENV_ROOT=$HOME/.pyenv
export PATH=$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
pyenv install --skip-existing -v 3.9.0
pyenv global 3.9.0
pip install --upgrade pip

# shell aws awscli install
# install awscli
pip install awscli

# shell postgresql psql pg_dump dump
PGPASSWORD="xxxx" pg_dump -h HOST -p 5432 -U USER_NAME DB_NAME -t TABLE_NAME --clean --if-exists

# shell postgresql psql pg_dump dump schema show create table
PGPASSWORD="xxxx" pg_dump -h HOST -p 5432 -U USER_NAME DB_NAME -t TABLE_NAME --clean --if-exists --schema-only

# sql postgresql psql drop index exists
DROP INDEX IF EXISTS public.INDEX_NAME;

# shell aws stepfunctions execution
# Step Functionsの最新実行の情報
aws --profile default stepfunctions describe-execution --execution-arn $(aws --profile default stepfunctions list-executions --state-machine-arn arn:aws:states:ap-northeast-1:xxxxxxxxxxxx:stateMachine:xxxx | jq -r '.executions[0].executionArn')
aws --profile default stepfunctions get-execution-history --execution-arn $(aws --profile default stepfunctions list-executions --state-machine-arn arn:aws:states:ap-northeast-1:xxxxxxxxxxxx:stateMachine:xxxx | jq -r '.executions[0].executionArn')
aws --profile default stepfunctions get-execution-history --execution-arn $(aws --profile default stepfunctions list-executions --state-machine-arn arn:aws:states:ap-northeast-1:xxxxxxxxxxxx:stateMachine:xxxx | jq -r '.executions[0].executionArn') | jq '.events[-1].stateEnteredEventDetails.input' -r | jq .

# shell aws glue job list
# Glue Job名の一覧
aws --profile default glue list-jobs --max-results 1000 | jq '.JobNames[]' -r

# shell aws glue job start invoke
# Glue Job起動
aws --profile default glue start-job-run --job-name JOB_NAME

